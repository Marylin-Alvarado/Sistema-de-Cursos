/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package vista;

import controlador.AlumnoController;
import controlador.CursaController;
import controlador.DocentesController;
import controlador.MatriculaController;
import controlador.NotaController;
import controlador.listas.ListaEnlazada;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import modelo.Alumno;
import modelo.Cursa;
import modelo.Docente;
import modelo.Matricula;
import modelo.Nota;
import vista.Utilidades.Utilidades;

/**
 *
 * @author TecnoeXtrem
 */
public class DialogCalificar extends javax.swing.JDialog {

    private CursaController cursaC = new CursaController();
    private FondoPanel fondo = new FondoPanel();
    private AlumnoController alumnController = new AlumnoController();
    private NotaController notaController = new NotaController();
    private DocentesController docenteControlador = new DocentesController();
    private MatriculaController matriculaControler = new MatriculaController();

    /**
     * Creates new form DialogCalificar
     */
    public DialogCalificar(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.setContentPane(fondo);
        initComponents();
        this.setLocationRelativeTo(this);
    }

    public DialogCalificar(java.awt.Frame parent, boolean modal, Alumno alumno,
            Cursa cursa, Docente docente, ListaEnlazada<Matricula> matriculaList) {
        super(parent, modal);
        this.setContentPane(fondo);
        initComponents();
        alumnController.setAlumno(alumno);
        cursaC.getCursaList().insertar(cursa);
        docenteControlador.setDocente(docente);
        matriculaControler.setMatriculaList(matriculaList);
        actualizarLabels();
        this.setLocationRelativeTo(this);
    }

    public void actualizarLabels() {
        lblNombreEstudiante.setText(alumnController.getAlumno().getNombres() + " " + alumnController.getAlumno().getApellidos());
        try {
            lblNotaFinal.setText(String.valueOf(cursaC.getCursaList().obtener(0).getNotaFinal().getNotaTotal()));
        } catch (Exception e) {
            System.out.println("Error en actualizar labels " + e);
            e.printStackTrace();
        }
    }

    class FondoPanel extends JPanel {

        private Image image;

        /**
         * Metodo para pintar los graficos de los grafos en la pantalla
         *
         * @param g
         */
        @Override
        public void paint(Graphics g) {
            image = new ImageIcon(getClass().getResource("../img/fondoBlanco.jpg")).getImage();
            g.drawImage(image, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblNombreEstudiante = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtAcompaniamientoDocente = new javax.swing.JTextField();
        txtTrabajoExperimental = new javax.swing.JTextField();
        txtTrabajoAutomatico = new javax.swing.JTextField();
        txtEvaluacion = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        lblNotaFinal = new javax.swing.JLabel();
        btnRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Asignar calificaciones");

        lblNombreEstudiante.setText("Nombre estudiante");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Asignar Calificaciones"));

        jLabel2.setText("Acompa√±amiento con el Docente:");

        jLabel3.setText("Trabajo Experimental:");

        jLabel4.setText("Trabajo Automatico:");

        jLabel5.setText("Evaluacion:");

        txtTrabajoAutomatico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTrabajoAutomaticoActionPerformed(evt);
            }
        });

        txtEvaluacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEvaluacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEvaluacion, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTrabajoAutomatico, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTrabajoExperimental, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAcompaniamientoDocente, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(86, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtAcompaniamientoDocente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTrabajoExperimental, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(txtTrabajoAutomatico))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEvaluacion))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jButton1.setText("Asignar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblNotaFinal.setText("Nota: ");
        lblNotaFinal.setEnabled(false);

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1)
                        .addGap(39, 39, 39)
                        .addComponent(lblNombreEstudiante, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnRegresar)
                                .addGap(136, 136, 136)
                                .addComponent(jButton1)
                                .addGap(103, 103, 103)
                                .addComponent(lblNotaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblNombreEstudiante, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(lblNotaFinal)
                    .addComponent(btnRegresar))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTrabajoAutomaticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTrabajoAutomaticoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTrabajoAutomaticoActionPerformed

    private void txtEvaluacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEvaluacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEvaluacionActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        asignarCalificacion();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        FrmDocente diaDocente = new FrmDocente(null, true, docenteControlador.getDocente());
        this.setVisible(false);
        diaDocente.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    public void asignarCalificacion() {
        try {
            System.out.println("Imprimir cursa " + cursaC.getCursaList().obtener(0).getAsignatura());
            notaController.getNota().setAcompanamientoD(Float.parseFloat(txtAcompaniamientoDocente.getText()));
            notaController.getNota().setTrabajoE(Float.parseFloat(txtTrabajoExperimental.getText()));
            notaController.getNota().setAprendizajeA(Float.parseFloat(txtTrabajoAutomatico.getText()));
            notaController.getNota().setEvaluacion(Float.parseFloat(txtEvaluacion.getText()));
            notaController.getNota().setNotaTotal((float) 0.0);
//            cursaC.getCursaList().obtener(0).setNotaFinal(notaController.getNota());
            cursaC.calcularNotaFinal(notaController.getNota());

            for (int i = 0; i < matriculaControler.getMatriculaList().getSize(); i++) {
                System.out.println("Matricula " + matriculaControler.getMatriculaList().obtener(i).getAlumno().getId());
                for (int j = 0; j < matriculaControler.getMatriculaList().obtener(i).getCursa().getSize(); j++) {

                    if (matriculaControler.getMatriculaList().obtener(i).getAlumno().getId() == alumnController.getAlumno().getId()
                            && matriculaControler.getMatriculaList().obtener(i).getCursa().obtener(j).getAsignatura().getNombre()
                            == cursaC.getCursaList().obtener(0).getAsignatura().getNombre()) {
                        matriculaControler.getMatriculaList().obtener(i).getCursa().obtener(j).setNotaFinal(cursaC.getCursaList().obtener(0).getNotaFinal());
                        System.out.println("DENTOR DE MODIFIICAR");
                        System.out.println("Nota final " + matriculaControler.getMatriculaList().obtener(i).getCursa().obtener(j).getNotaFinal().getNotaTotal());
                        Utilidades.modificarMatricula(matriculaControler.getMatriculaList().obtener(i), (matriculaControler.getMatriculaList().obtener(i).getIdMatricula() - 1));
                        JOptionPane.showMessageDialog(null, "Calificacion registrada");

                    }
                }
            }
        } catch (Exception e) {
            System.out.println("Exception " + e);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogCalificar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogCalificar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogCalificar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogCalificar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogCalificar dialog = new DialogCalificar(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblNombreEstudiante;
    private javax.swing.JLabel lblNotaFinal;
    private javax.swing.JTextField txtAcompaniamientoDocente;
    private javax.swing.JTextField txtEvaluacion;
    private javax.swing.JTextField txtTrabajoAutomatico;
    private javax.swing.JTextField txtTrabajoExperimental;
    // End of variables declaration//GEN-END:variables
}
